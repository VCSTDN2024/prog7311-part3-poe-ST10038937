@{
    ViewData["Title"] = "About Our Platform";
}

<div class="container py-5">
    <header class="text-center mb-5">
        <h1 class="display-4 fw-bold" data-translate-key="AboutAgriEnergyConnect">About Agri-Energy Connect</h1>
        <p class="lead text-muted" data-translate-key="AnEnterpriseGradeSoftwareSystem">An Enterprise-Grade Software System for the Modern Agricultural Sector</p>
    </header>

    <main>
        <!-- Platform Overview -->
        <section class="mb-5" aria-labelledby="platform-overview-heading">
            <div class="card">
                <div class="card-header">
                    <h2 id="platform-overview-heading" class="h3 mb-0 text-white" data-translate-key="PlatformOverview">Platform Overview</h2>
                </div>
                <div class="card-body">
                    <p class="card-text" data-translate-key="AgriEnergyConnectDescription">Agri-Energy Connect is a sophisticated, web-based enterprise system designed to serve as a central marketplace for the agricultural industry. It empowers farmers by providing robust tools to manage their products, while connecting them with a broad network of employees and stakeholders. The platform facilitates seamless interaction, transparent data management, and community engagement, driving efficiency and growth for all users.</p>
                </div>
            </div>
        </section>

        <!-- Key Features -->
        <section class="mb-5" aria-labelledby="key-features-heading">
            <h2 id="key-features-heading" class="text-center mb-4" data-translate-key="KeyFeatures">Key Features</h2>
            <div class="row g-4">
                <div class="col-md-6 col-lg-4 d-flex">
                    <div class="card w-100">
                        <div class="card-body">
                            <h3 class="h5 card-title" data-translate-key="ProductFarmerManagement"><i class="bi bi-box-seam me-2"></i>Product & Farmer Management</h3>
                            <p class="card-text" data-translate-key="ProductFarmerManagementDescription">Full Create, Read, Update, and Delete (CRUD) functionality for farmer profiles and their product listings.</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-lg-4 d-flex">
                    <div class="card w-100">
                        <div class="card-body">
                            <h3 class="h5 card-title" data-translate-key="CommunityForum"><i class="bi bi-people-fill me-2"></i>Community Forum</h3>
                            <p class="card-text" data-translate-key="CommunityForumDescription">An interactive forum for farmers and employees to engage, ask questions, and share knowledge, complete with replies and moderation.</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-lg-4 d-flex">
                    <div class="card w-100">
                        <div class="card-body">
                            <h3 class="h5 card-title" data-translate-key="RoleBasedAccessControl"><i class="bi bi-shield-lock me-2"></i>Role-Based Access Control</h3>
                            <p class="card-text" data-translate-key="RoleBasedAccessControlDescription">Secure authentication and authorization system distinguishing between Farmer and Employee roles, ensuring users only access appropriate features.</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-lg-4 d-flex">
                    <div class="card w-100">
                        <div class="card-body">
                            <h3 class="h5 card-title" data-translate-key="AuditLogging"><i class="bi bi-journal-text me-2"></i>Audit Logging</h3>
                            <p class="card-text" data-translate-key="AuditLoggingDescription">Comprehensive and filterable audit trails that record critical system events for security, compliance, and troubleshooting.</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-lg-4 d-flex">
                    <div class="card w-100">
                        <div class="card-body">
                            <h3 class="h5 card-title" data-translate-key="AjaxLocalization"><i class="bi bi-translate me-2"></i>AJAX-Powered Localization</h3>
                            <p class="card-text" data-translate-key="AjaxLocalizationDescription">Seamless, no-refresh language switching between English, Afrikaans, and isiZulu for a superior, uninterrupted user experience.</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-6 col-lg-4 d-flex">
                    <div class="card w-100">
                        <div class="card-body">
                            <h3 class="h5 card-title" data-translate-key="ModernUIAccessibility"><i class="bi bi-universal-access me-2"></i>Modern UI & Accessibility</h3>
                            <p class="card-text" data-translate-key="ModernUIAccessibilityDescription">A responsive, visually appealing interface with a strong focus on accessibility (ARIA, WCAG) to ensure usability for all.</p>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Enterprise Characteristics -->
        <section class="mb-5" aria-labelledby="enterprise-characteristics-heading">
            <div class="card">
                <div class="card-header">
                    <h2 id="enterprise-characteristics-heading" class="h3 mb-0 text-white" data-translate-key="EnterpriseCharacteristics">Enterprise Software System Characteristics</h2>
                </div>
                <div class="card-body">
                    <p data-translate-key="EnterprisePrinciples">Our platform is built with core enterprise principles to ensure it is robust, reliable, and ready for business-critical operations:</p>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item"><strong data-translate-key="Scalability">Scalability:</strong> <span data-translate-key="ScalabilityDescription">Built on the high-performance ASP.NET Core framework, the system is designed to handle growth in users and data with efficiency.</span></li>
                        <li class="list-group-item"><strong data-translate-key="Security">Security:</strong> <span data-translate-key="SecurityDescription">Leverages ASP.NET Core Identity for robust authentication and authorization, supplemented with detailed audit logging for full traceability.</span></li>
                        <li class="list-group-item"><strong data-translate-key="ReliabilityMaintainability">Reliability & Maintainability:</strong> <span data-translate-key="ReliabilityMaintainabilityDescription">Adherence to SOLID principles and the use of established design patterns result in a clean, maintainable, and testable codebase.</span></li>
                        <li class="list-group-item"><strong data-translate-key="Accessibility">Accessibility (A11y):</strong> <span data-translate-key="AccessibilityDescription">A comprehensive commitment to accessibility, incorporating ARIA landmarks, semantic HTML, and high-contrast design to meet diverse user needs.</span></li>
                    </ul>
                </div>
            </div>
        </section>

        <!-- Design and Architecture -->
        <section class="mb-5" aria-labelledby="design-architecture-heading">
            <div class="card">
                <div class="card-header">
                    <h2 id="design-architecture-heading" class="h3 mb-0 text-white" data-translate-key="DesignAndArchitecture">Design and Architecture Patterns</h2>
                </div>
                <div class="card-body">
                    <p data-translate-key="DesignPatternsIntro">The system's architecture is founded on proven design patterns to ensure a clear separation of concerns and a flexible, component-based structure:</p>
                    <dl class="row">
                        <dt class="col-sm-3" data-translate-key="MVC">Model-View-Controller (MVC)</dt>
                        <dd class="col-sm-9" data-translate-key="MVCDescription">The core architectural pattern that separates application logic, data, and presentation, promoting organized and parallel development.</dd>

                        <dt class="col-sm-3" data-translate-key="RepositoryPattern">Repository Pattern</dt>
                        <dd class="col-sm-9" data-translate-key="RepositoryPatternDescription">Decouples the business logic from the data access layer, allowing for more flexible and testable data operations.</dd>

                        <dt class="col-sm-3" data-translate-key="ObserverPattern">Observer Pattern</dt>
                        <dd class="col-sm-9" data-translate-key="ObserverPatternDescription">Enables a publish-subscribe mechanism for event handling, creating a decoupled system where components can react to state changes without direct dependencies. This is demonstrated live below.</dd>

                        <dt class="col-sm-3" data-translate-key="DependencyInjection">Dependency Injection (DI)</dt>
                        <dd class="col-sm-9" data-translate-key="DependencyInjectionDescription">Utilized extensively throughout the application via the built-in ASP.NET Core service container to manage dependencies and promote loose coupling.</dd>
                    </dl>
                    <hr/>
                    <div id="observer-demo">
                        <h4 class="h5" data-translate-key="LiveObserverDemo">Live Observer Pattern Demo</h4>
                        <p data-translate-key="LiveObserverDemoDescription">This demo illustrates how multiple components (a status display and a logger) react to state changes from a single source without being directly linked.</p>
                        <p><strong data-translate-key="SubjectStatus">Subject Status:</strong> <span id="subject-state" class="fw-bold badge bg-primary">Idle</span></p>
                        <button id="subject-action-btn" class="btn btn-sm btn-secondary" aria-label="Trigger observer pattern action" data-translate-key="TriggerStateChange">Trigger State Change</button>
                        <div class="mt-3">
                            <strong data-translate-key="ObserverLog">Observer Log:</strong>
                            <div id="observer-log" class="mt-1 p-2 bg-light rounded" style="font-family: monospace; font-size: 0.85em; max-height: 120px; overflow-y: auto;" role="log" aria-live="polite"></div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Development Approach -->
        <section class="mb-5" aria-labelledby="development-approach-heading">
            <div class="card">
                <div class="card-header">
                    <h2 id="development-approach-heading" class="h3 mb-0 text-white" data-translate-key="DevelopmentApproachHeading">Enterprise Software System Development</h2>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h5 data-translate-key="TechStack">Technology Stack</h5>
                            <ul class="list-unstyled">
                                <li><strong data-translate-key="Backend">Backend:</strong> C#, ASP.NET Core, Entity Framework Core</li>
                                <li><strong data-translate-key="Frontend">Frontend:</strong> HTML5, CSS3, JavaScript, Bootstrap 5</li>
                                <li><strong data-translate-key="Database">Database:</strong> SQLite</li>
                                <li><strong data-translate-key="Authentication">Authentication:</strong> ASP.NET Core Identity</li>
                            </ul>
                        </div>
                        <div class="col-md-6">
                            <h5 data-translate-key="DevelopmentApproach">Development Approach</h5>
                            <p data-translate-key="DevelopmentApproachDescription">This project was developed using an iterative and incremental methodology, guided by agile principles. We focused on delivering functional components in stages, allowing for continuous feedback and refinement. This approach emphasized code quality, adherence to best practices, and a commitment to building a robust and user-centric final product.</p>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const observerDemoContainer = document.getElementById('observer-demo');
            if (observerDemoContainer) {
                const subject = {
                    observers: [],
                    state: 'Idle',
                    addObserver: function (observer) { this.observers.push(observer); },
                    notifyObservers: function () { this.observers.forEach(observer => observer.update(this.state)); },
                    setState: function (newState) {
                        this.state = newState;
                        this.notifyObservers();
                    }
                };

                const loggerObserver = {
                    update: function (state) {
                        const logContainer = document.getElementById('observer-log');
                        if (logContainer) {
                            const timestamp = new Date().toLocaleTimeString();
                            logContainer.innerHTML += `<div>[${timestamp}] State changed to: ${state}</div>`;
                            logContainer.scrollTop = logContainer.scrollHeight;
                        }
                    }
                };

                const statusObserver = {
                    update: function (state) {
                        const statusEl = document.getElementById('subject-state');
                        if (statusEl) statusEl.textContent = state;
                    }
                };

                subject.addObserver(loggerObserver);
                subject.addObserver(statusObserver);

                const actionBtn = document.getElementById('subject-action-btn');
                if (actionBtn) {
                    actionBtn.addEventListener('click', function () {
                        const states = ['Processing', 'Updating', 'Completed', 'Idle'];
                        const currentState = subject.state;
                        let nextState = states[0];
                        if (currentState !== 'Idle') {
                            const currentIndex = states.indexOf(currentState);
                            nextState = states[(currentIndex + 1) % (states.length - 1)];
                        }
                        subject.setState(nextState);
                    });
                }
            }
        });
    </script>
}
